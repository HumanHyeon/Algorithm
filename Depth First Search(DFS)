#include <iostream>
#include <vector>
using namespace std;

bool visit[10];
vector<int> relate[10];

void DFS(int start) {
	if (visit[start])	return;

	visit[start] = true;
	cout << start << " ";

	for (int i = 0; i < relate[start].size(); i++) {
		int tmp = relate[start][i];
		DFS(tmp);
	}
}

int main() {
/*
			1
		2	ㅡ	3
	4	5		6	7
	|	|	
	8	9
*/
	relate[1].push_back(2);
	relate[2].push_back(1);

	relate[1].push_back(3);
	relate[3].push_back(1);

	relate[2].push_back(3);
	relate[3].push_back(2);

	relate[2].push_back(4);
	relate[4].push_back(2);

	relate[2].push_back(5);
	relate[5].push_back(2);

	relate[4].push_back(8);
	relate[8].push_back(4);

	relate[5].push_back(9);
	relate[9].push_back(5);

	relate[3].push_back(6);
	relate[6].push_back(3);

	relate[3].push_back(7);
	relate[7].push_back(3);

	DFS(1);
}

//재귀로 연관된 모든 것을 꼬리물기로 계속 탐색
//BFS는 반복문 DFS는 재귀
